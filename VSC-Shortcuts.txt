{
  "key": "ctrl+shift+enter",
  "command": "editor.action.insertLineBefore",
  "when": "editorTextFocus && !editorReadonly"
}

{
  "key": "ctrl+enter",
  "command": "editor.action.insertLineAfter",
  "when": "editorTextFocus && !editorReadonly"
}

{
  "key": "ctrl+shift+k",
  "command": "editor.action.deleteLines",
  "when": "textInputFocus && !editorReadonly"
}

{
  "key": "ctrl+alt+n",
  "command": "code-runner.run"
}

{
  "key": "ctrl+alt+m",
  "command": "code-runner.stop"
}

{
  "key": "alt+down",
  "command": "editor.action.moveLinesDownAction",
  "when": "editorTextFocus && !editorReadonly"
}

{
  "key": "alt+up",
  "command": "editor.action.moveLinesUpAction",
  "when": "editorTextFocus && !editorReadonly"
}

{
  "key": "ctrl+d",
  "command": "editor.action.addSelectionToNextFindMatch",
  "when": "editorFocus"
}

{
  "key": "ctrl+shift+l",
  "command": "editor.action.selectHighlights",
  "when": "editorFocus"
}

{
  "key": "ctrl+shift+k",
  "command": "editor.action.deleteLines",
  "when": "textInputFocus && !editorReadonly"
}

{
  "key": "ctrl+k",
  "command": "workbench.output.action.clearOutput"
}

{
  "key": "ctrl+oem_2",
  "command": "editor.action.commentLine",
  "when": "editorTextFocus && !editorReadonly"
}

{
  "key": "ctrl+shift+o",
  "command": "workbench.action.output.toggleOutput",
  "when": "workbench.panel.output.active"
}

